service: notes-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1

functions:
  authorizer: 
    handler: authorizer.handler

  createNote:
    handler: handler.createNote
    environment:
      NOTES_TABLE_NAME: !Ref NotesTable
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:PutItem
        Resource: !GetAtt NotesTable.Arn
    events:
      - http:
          method: post
          path: notes
          authorizer: authorizer

  updateNote:
    handler: handler.updateNote
    environment:
      NOTES_TABLE_NAME: !Ref NotesTable
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:UpdateItem
        Resource: !GetAtt NotesTable.Arn
    events:
      - http:
          method: put
          path: notes/{id}
          authorizer: authorizer

  deleteNote:
    handler: handler.deleteNote
    environment:
      NOTES_TABLE_NAME: !Ref NotesTable
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:DeleteItem
        Resource: !GetAtt NotesTable.Arn
    events:
      - http:
          method: delete
          path: notes/{id}
          authorizer: authorizer

  getAllNotes:
    handler: handler.getAllNotes
    environment:
      NOTES_TABLE_NAME: !Ref NotesTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: !GetAtt NotesTable.Arn
    events:
      - http:
          method: get
          path: notes
          authorizer:
            name: userpool_authroizer
            arn: arn:aws:cognito-idp:us-east-1:215287253750:userpool/us-east-1_NeL88gitP

plugins:
  - serverless-iam-roles-per-function

# Resource section incudes cloudformation resources
resources:
  Resources: ${file(resources.yml)}
   



    